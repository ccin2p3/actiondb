use matcher::trie::node::{CompiledPattern};
use matcher::trie::node::{Node, NodeType};
use parsers::SetParser;

identifier -> &'input str
  = ([a-z-A-Z_]![-])+ { match_str }

parser_type -> &'input str
  = identifier

parser_name -> &'input str
  = identifier

literal -> &'input str
  = identifier

#[pub]
part_parser -> NodeType<'input>
  = "%{" pt:parser_type ":" pin:parser_name "}" {?
  if pt == "SET" {
    let parser = Box::new(SetParser::new(pin, "0123456789"));
    Ok(NodeType::Parser(parser))
  } else {
    Err("No parser found with this type")
  }
}

part_literal -> NodeType<'input>
  = lit:literal { NodeType::Literal(lit) }

#[pub]
pattern -> CompiledPattern<'input>
  = pattern_parts*

pattern_parts -> NodeType<'input>
  = part_parser / part_literal
